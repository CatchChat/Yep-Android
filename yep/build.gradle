import fr.avianey.androidsvgdrawable.gradle.SvgDrawableTask

apply plugin: 'com.android.application'
apply plugin: "androidsvgdrawable"
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.0"

    defaultConfig {
        applicationId "catchla.yep"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    jcenter()
    maven { url 'http://repo.commonsware.com.s3.amazonaws.com' }
    maven { url "https://jitpack.io" }
}

dependencies {
    apt 'com.bluelinelabs:logansquare-compiler:1.1.0'
    compile 'com.android.support:appcompat-v7:23.0.0'
    compile 'com.android.support:recyclerview-v7:23.0.0'
    compile 'com.android.support:support-v4:23.0.0'
    compile 'com.pkmmte.view:circularimageview:1.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.github.mariotaku:MessageBubbleView:1.2'
    compile 'com.github.mariotaku:RestFu:1d14fd7b155797897ab052f3be79a72f01e236f8'
    compile 'org.apmem.tools:layouts:1.9@aar'
    compile 'com.commonsware.cwac:merge:1.1.1'
    compile 'me.imid.swipebacklayout.lib:library:1.0.0'
    compile 'org.jraf:android-switch-backport:2.0.1'
    compile 'com.github.techfreak:wizardpager:1.0.0'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.squareup.okhttp:okhttp:2.3.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup:tape:1.2.3'
    compile 'com.squareup:otto:1.3.7'
    compile 'com.bluelinelabs:logansquare:1.1.0'
    compile 'com.github.boxme:asyncmanager:1.0.0'
    compile 'com.rengwuxian.materialedittext:library:2.1.4'
    compile 'com.github.mariotaku:PickNCrop:a7abe5316c'
    compile 'com.github.mariotaku:SQLiteQB:b37bee32fe'
    compile 'com.saulpower.fayeclient:library:1.0'
    compile 'com.googlecode.libphonenumber:libphonenumber:7.0.9'
    compile 'org.osmdroid:osmdroid-android:4.3'
    compile 'org.slf4j:slf4j-simple:1.7.12'
    debugCompile 'com.facebook.stetho:stetho:1.1.1'
    debugCompile 'com.facebook.stetho:stetho-okhttp:1.1.1'

    compile fileTree(dir: 'libs', include: ['*.jar'])
}

task svgToDrawable(type: SvgDrawableTask) {
    // specify where to pick SVG from
    from = file('src/main/res-svg/drawable')
    // specify the android res folder
    to = file('src/main/res')
    // create qualified directories if missing
    createMissingDirectories = true
    // override files only if necessary
    overrideMode = 'ifModified'
    // let generate PNG for the following densities only
    targetedDensities = ['hdpi', 'mdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi']
    // relative path of the file specifying nine patch specs
    ninePatchConfig = file('src/main/svg-png/9patch.json')
    // output format of the generated resources
    outputFormat = 'PNG'

    outputType = 'drawable'
}

task svgToMipmap(type: SvgDrawableTask) {
    // specify where to pick SVG from
    from = file('src/main/res-svg/mipmap')
    // specify the android res folder
    to = file('src/main/res')
    // create qualified directories if missing
    createMissingDirectories = true
    // override files only if necessary
    overrideMode = 'ifModified'
    // let generate PNG for the following densities only
    targetedDensities = ['hdpi', 'mdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi']
    // output format of the generated resources
    outputFormat = 'PNG'

    outputType = 'mipmap'
}